syntax = "proto3";
package chat;


import "google/protobuf/descriptor.proto";
extend google.protobuf.FileOptions {
  string tin_module_validation = 4000;
}
extend google.protobuf.MessageOptions {
  string tin_message_validation = 4000;
}
extend google.protobuf.FieldOptions {
  string tin_field_validation = 4000;
}

enum Urgency {
  URGENCY_NORMAL = 0;
  URGENCY_URGENT = 1;
  URGENCY_RELAXED = 2;
};

message IdentRequest {
  string nick = 1 [
    (tin_field_validation) = "required |> trimString |> nonEmptyString |> maxStrLen(8)"
  ];
}

message IdentReply {
  string error = 1;
}

message SendMessageRequest {
  string channel = 1 [
    (tin_field_validation) = "required |> trimString |> minStrLen(3) |> maxStrLen(16)"
  ];
  string text = 2 [
    (tin_field_validation) = "required |> trimString |> nonEmptyString |> maxStrLen(70)"
  ];
  Urgency urgency = 3 [
    (tin_field_validation) = "required"
  ];
  option (tin_message_validation) = "x|.channel|.Belt.Option.getExn != \"#nope\" ? okSome(x) : transFieldError(\"can't send to channel #nope\")";
}

message SendPasswordedMessageRequest {
  string password = 1 [
    (tin_field_validation) = "required"
  ];
  SendMessageRequest sendMessageRequest = 2 [
    (tin_field_validation) = "required"
  ];
  Urgency urgency = 3 [
    (tin_field_validation) = "required"
  ];
}

message SendMessageReply {
  string error = 1;
}

message PollRequest {
  repeated string channels = 1 [
    (tin_field_validation) = "minItemCount(1) |> maxItemCount(16) |> repeated(x => x |> minStrLen(3) |> maxStrLen(16))"
  ];
  fixed32 time = 2 [
    (tin_field_validation) = "required |> positive"
  ];
}

message ChannelMessage {
  string channel = 1;
  string nick = 2;
  string text = 3;
  Urgency urgency = 4;
};

message ChannelMessages {
  repeated ChannelMessage channel_messages = 1;
};

message PollReply {
  oneof result {
    ChannelMessages channel_messages = 1;
    string error = 2;
  }
}

message Some64BitValues {
	fixed64 fix64 = 1;
	sfixed64 sfix64 = 2;
	int64 varint64 = 3;
	sint64 svarint64 = 4;
	uint64 uvarint64 = 5;
};

message PasswordResetRequest {
  string password = 1 [
    (tin_field_validation) = "required |> minStrLen(10)"
  ];
  string passwordConfirm = 2 [
    (tin_field_validation) = "required |> minStrLen(10)"
  ];
  option (tin_message_validation) = "password(x) == passwordConfirm(x) ? okSome(x) : transFieldError(\"passwords don't match\")";
}

service ChatService {
  rpc SendMessage (SendMessageRequest) returns (SendMessageReply) {}
  rpc SendPasswordedMessage (SendPasswordedMessageRequest) returns (SendMessageReply) {}
  rpc Poll (PollRequest) returns (PollReply) {}
	rpc Echo64 (Some64BitValues) returns (Some64BitValues) {}
}
